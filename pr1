//exercise_1
#include <iostream>

int main() {
    int vector[] = { 3, -5, 7, 10, -4, 14, 5, 2, -13 };
    int n = sizeof(vector) / sizeof(vector[0]);

    // Вказівник, що посилається на перший елемент масиву
    int *ptr = vector;
    
    // Ініціалізуємо мінімальне значення як перший елемент масиву
    int min_value = *ptr;

    // Проходимося по всіх елементах масиву за допомогою вказівника
    for (int i = 1; i < n; ++i) {
        // Перевіряємо, чи значення, на яке вказує вказівник, менше поточного мінімального значення
        if (*(ptr + i) < min_value) {
            // Якщо так, оновлюємо мінімальне значення
            min_value = *(ptr + i);
        }
    }

    // Виводимо знайдене мінімальне значення
    std::cout << "Мінімальний елемент масиву: " << min_value << std::endl;

    return 0;
}

//exercise_2
#include <iostream>

int main() {
    int matrix[10][10] = { };

    // Вказівник, що посилається на початок масиву
    int (*ptr)[10] = matrix;

    // Заповнюємо масив значеннями, що утворюють таблицю множення
    for (int i = 1; i <= 10; ++i) {
        for (int j = 1; j <= 10; ++j) {
            // Встановлюємо значення за допомогою вказівника
            *(*ptr + j - 1) = i * j;
        }
        // Переміщуємо вказівник на наступний рядок масиву
        ++ptr;
    }

    // Виводимо масив, що заповнений значеннями таблиці множення
    for (int i = 0; i < 10; ++i) {
        for (int j = 0; j < 10; ++j) {
            std::cout.width(4);
            std::cout << matrix[i][j];
        }
        std::cout << std::endl;
    }

    return 0;
}
